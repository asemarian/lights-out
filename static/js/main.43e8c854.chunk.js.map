{"version":3,"sources":["Cell.js","helpers.js","Grid.js","App.js","index.js"],"names":["Cell","props","handleToggle","bind","this","toggle","index","className","isLit","onClick","Component","m1","m2","dotProduct","u","v","map","x","i","reduce","a","b","isSolvable","m","flat","s1","s2","generatePattern","size","Array","from","length","y","Math","floor","random","getSolvablePattern","pattern","Boolean","Grid","state","newGame","matrix","undefined","setState","every","row","cell","bool","j","key","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43e8c854.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Cell.css';\r\n\r\nclass Cell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n    }\r\n\r\n    handleToggle() {\r\n        this.props.toggle(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        return <div className={`Cell-${this.props.isLit ? 'on' : 'off'}`} onClick={this.handleToggle}></div>\r\n    }\r\n}\r\n\r\nexport default Cell;","const m1 = [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0];\r\nconst m2 = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1];\r\n\r\nconst dotProduct = (u, v) => u.map((x, i) => x * v[i]).reduce((a, b) => a + b, 0);\r\n\r\nconst isSolvable = (m) => {\r\n    let v = m.flat();\r\n    let s1 = dotProduct(v, m1);\r\n    let s2 = dotProduct(v, m2);\r\n    return s1 % 2 === 0 && s2 % 2 === 0 ? true : false;\r\n}\r\n\r\nconst generatePattern = (size) => Array.from({ length: size }, x => Array.from({ length: size }, y => Math.floor(Math.random() * 2)));\r\n\r\nconst getSolvablePattern = (size) => {\r\n    let pattern;\r\n    do {\r\n        pattern = generatePattern(size);\r\n    } while (!isSolvable(pattern))\r\n\r\n    return pattern.map(x => x.map(y => Boolean(y)));\r\n}\r\n\r\nexport default getSolvablePattern;","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport getSolvablePattern from './helpers';\r\nimport './Grid.css';\r\n\r\nclass Grid extends Component {\r\n    static defaultProps = {\r\n        size: 5\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pattern: getSolvablePattern(this.props.size)\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.newGame = this.newGame.bind(this);\r\n    }\r\n\r\n    toggle(index) {\r\n        const [a, b] = index;\r\n        const matrix = [...this.state.pattern];\r\n\r\n        matrix[a][b] = !matrix[a][b];\r\n        (matrix[a][b + 1] !== undefined) && (matrix[a][b + 1] = !matrix[a][b + 1]);\r\n        (matrix[a][b - 1] !== undefined) && (matrix[a][b - 1] = !matrix[a][b - 1]);\r\n        (a + 1 < matrix.length) && (matrix[a + 1][b] = !matrix[a + 1][b]);\r\n        (a - 1 >= 0) && (matrix[a - 1][b] = !matrix[a - 1][b]);\r\n\r\n        this.setState({ pattern: [...matrix] });\r\n    }\r\n\r\n    newGame() {\r\n        this.setState({ pattern: getSolvablePattern(this.props.size) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            this.state.pattern.every(row => row.every(cell => cell === false)) ?\r\n                <div className=\"Grid-win\">\r\n                    <p className=\"Grid-win-message\">You Win!</p>\r\n                    <button className=\"Grid-win-button\" onClick={this.newGame}>Play Again?</button>\r\n                </div>\r\n                :\r\n                <div className=\"Grid\">\r\n                    {this.state.pattern.map((row, i) => row.map((bool, j) => <Cell isLit={bool} toggle={this.toggle} index={[i, j]} key={`${i}-${j}`} />))}\r\n                </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./Grid\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-banner\">Lights Out</div>\n        <Grid />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}